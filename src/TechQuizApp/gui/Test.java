/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TechQuizApp.gui;

import TechQuizApp.dao.PerformanceDao;
import TechQuizApp.dao.QuestionDao;
import TechQuizApp.pojo.AnswerPojo;
import TechQuizApp.pojo.AnswerStore;
import TechQuizApp.pojo.ExamPojo;
import TechQuizApp.pojo.PerformancePojo;
import TechQuizApp.pojo.QuestionPojo;
import TechQuizApp.pojo.QuestionStore;
import TechQuizApp.pojo.UserProfile;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import javafx.scene.control.RadioButton;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

/**
 *
 * @author atulb
 */
public class Test extends javax.swing.JFrame {

    private ExamPojo exam;
    private QuestionStore qstore;
    private AnswerStore astore;
    private int qno = 1, pos = 0;

    /**
     * Creates new form Test
     */
    public Test() {
        initComponents();
        super.setLocationRelativeTo(null);
        username.setText("Hello " + UserProfile.getUsername());
        qstore = new QuestionStore();
        astore = new AnswerStore();
        qnol.setText("Question no:" + qno);

    }

    Test(ExamPojo exam) {
        this();
        this.exam = exam;
        paper.setText(exam.getLanguage().toUpperCase() + " Paper");
        loadQuestion();
        showQuestion();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        paper = new javax.swing.JLabel();
        qnol = new javax.swing.JLabel();
        op2 = new javax.swing.JRadioButton();
        op4 = new javax.swing.JRadioButton();
        op1 = new javax.swing.JRadioButton();
        op3 = new javax.swing.JRadioButton();
        previous = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        next = new javax.swing.JToggleButton();
        done = new javax.swing.JToggleButton();
        username = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        tarea = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(54, 33, 89));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        paper.setBackground(new java.awt.Color(204, 204, 204));
        paper.setForeground(new java.awt.Color(204, 204, 204));
        paper.setText("jLabel1");
        jPanel1.add(paper, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 24, -1, -1));

        qnol.setForeground(new java.awt.Color(204, 204, 204));
        qnol.setText("jLabel1");
        jPanel1.add(qnol, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 110, -1, -1));

        op2.setBackground(new java.awt.Color(54, 33, 89));
        buttonGroup1.add(op2);
        op2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        op2.setForeground(new java.awt.Color(204, 204, 204));
        op2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op2ActionPerformed(evt);
            }
        });
        jPanel1.add(op2, new org.netbeans.lib.awtextra.AbsoluteConstraints(549, 225, -1, -1));

        op4.setBackground(new java.awt.Color(54, 33, 89));
        buttonGroup1.add(op4);
        op4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        op4.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(op4, new org.netbeans.lib.awtextra.AbsoluteConstraints(549, 298, -1, -1));

        op1.setBackground(new java.awt.Color(54, 33, 89));
        buttonGroup1.add(op1);
        op1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        op1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(op1, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 225, -1, -1));

        op3.setBackground(new java.awt.Color(54, 33, 89));
        buttonGroup1.add(op3);
        op3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        op3.setForeground(new java.awt.Color(204, 204, 204));
        op3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op3ActionPerformed(evt);
            }
        });
        jPanel1.add(op3, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 298, -1, -1));

        previous.setText("Previous");
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });
        jPanel1.add(previous, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 456, -1, -1));

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel1.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 456, -1, -1));

        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        jPanel1.add(next, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 456, -1, -1));

        done.setText("Done");
        done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneActionPerformed(evt);
            }
        });
        jPanel1.add(done, new org.netbeans.lib.awtextra.AbsoluteConstraints(569, 456, -1, -1));

        username.setForeground(new java.awt.Color(204, 204, 204));
        username.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_User_25px_2.png"))); // NOI18N
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        logout.setForeground(new java.awt.Color(204, 204, 204));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Exit_25px.png"))); // NOI18N
        logout.setText("Logout");
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutMouseExited(evt);
            }
        });
        jPanel1.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(619, 11, -1, -1));

        tarea.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        tarea.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.add(tarea, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 110, 378, 44));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void op2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_op2ActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null) {
            QuestionPojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectAnswer();
            AnswerPojo newanswer = new AnswerPojo(exam.getExamid(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);
            System.out.println(newanswer);
            AnswerPojo answer = astore.getAnswerBYQno(qno);
            System.out.println(answer);
            if (answer == null) {
                astore.addAnswer(newanswer);

            } else {
                if (newanswer.getChosenanswer().equals(answer.getChosenanswer()) == false) {
                    int apos = astore.removeAnswers(answer);
                    astore.setAnswerAt(apos, newanswer);
                }

            }
        }
        pos--;
        if (pos < 0) {
            pos = qstore.getCount() - 1;

        }
        qno--;
        if (qno <= 0) {
            qno = qstore.getCount();

        }
        qnol.setText("Question no" + qno);
        showQuestion();
    }//GEN-LAST:event_previousActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        StudentOptionsFrame obj = new StudentOptionsFrame();
        this.dispose();
        obj.setVisible(true);
    }//GEN-LAST:event_cancelActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();
        if (chosenAnswer != null) {
            QuestionPojo question = qstore.getQuestion(pos);
            String correctAnswer = question.getCorrectAnswer();
            AnswerPojo newanswer = new AnswerPojo(exam.getExamid(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);

            AnswerPojo answer = astore.getAnswerBYQno(qno);

            if (answer == null) {
                astore.addAnswer(newanswer);
            } else {
                if (newanswer.getChosenanswer().equals(answer.getChosenanswer()) == false) {
                    int apos = astore.removeAnswers(answer);
                    astore.setAnswerAt(apos, newanswer);
                }

            }
        }
        pos++;
        if (pos >= qstore.getCount()) {
            pos = 0;
        }
        qno++;
        if (qno > qstore.getCount()) {
            qno = 1;
        }
        qnol.setText("Question no" + qno);
        showQuestion();
    }//GEN-LAST:event_nextActionPerformed

    private void doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneActionPerformed
        // TODO add your handling code here:
        String chosenAnswer = getUserAnswer();

        if (chosenAnswer != null) {
            QuestionPojo question = qstore.getQuestion(pos);

            String correctAnswer = question.getCorrectAnswer();
            AnswerPojo newanswer = new AnswerPojo(exam.getExamid(), exam.getLanguage(), qno, chosenAnswer, correctAnswer);

            AnswerPojo answer = astore.getAnswerBYQno(qno);

            if (answer == null) {
                astore.addAnswer(newanswer);
            } else {
                if (newanswer.getChosenanswer().equals(answer.getChosenanswer()) == false) {
                    int apos = astore.removeAnswers(answer);
                    astore.setAnswerAt(apos, newanswer);
                }
            }
        }
        int right = 0, wrong = 0;
        for (QuestionPojo question : qstore.getAllQuestions()) {
            int qno = question.getQno();
            AnswerPojo answer = astore.getAnswerBYQno(qno);
            if (answer == null) {

                continue;
            } else {
                String chosenAnswer1 = answer.getChosenanswer();
                String correctAnswer = answer.getCorrectAnswer();
                if (chosenAnswer1.equals(correctAnswer)) {
                    ++right;
                } else {
                    ++wrong;
                }
            }
        }
        String reportCard = "Total Question:" + qstore.getCount();
        reportCard += "\nRight Answer:" + right;
        reportCard += "\nWrong Answer:" + wrong;
        reportCard += "\nUnattempted:" + (qstore.getCount() - (right + wrong));
        JOptionPane.showMessageDialog(null, reportCard, "Your Result", JOptionPane.INFORMATION_MESSAGE);
        try {
            {
                PerformancePojo performance = new PerformancePojo(exam.getExamid(), exam.getLanguage(), UserProfile.getUsername(), right, wrong, (qstore.getCount() - (right + wrong)), (double) right / qstore.getCount() * 100);
                PerformanceDao.addPerformance(performance);
                JOptionPane.showMessageDialog(null, "Your performance has been added to db");
                TakeTest paperFrame = new TakeTest();
                paperFrame.setVisible(true);
                this.dispose();

            }
        } catch (Exception ex) {

            ex.printStackTrace();
        }
    }//GEN-LAST:event_doneActionPerformed

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // TODO add your handling code here:
        loginscreen1 obj = new loginscreen1();
        this.dispose();
        obj.setVisible(true);
    }//GEN-LAST:event_logoutMouseClicked

    private void logoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseEntered
        // TODO add your handling code here:
        logout.setForeground(Color.WHITE);
        Font f = new Font("Segoe UI Black", Font.PLAIN, 14);
        logout.setFont(f);
    }//GEN-LAST:event_logoutMouseEntered

    private void logoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseExited
        // TODO add your handling code here:
        logout.setForeground(new Color(204, 204, 204));
        Font f = new Font("Segoe UI ", Font.BOLD, 14);
        logout.setFont(f);
    }//GEN-LAST:event_logoutMouseExited

    private void op3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_op3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Test.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Test().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancel;
    private javax.swing.JToggleButton done;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel logout;
    private javax.swing.JToggleButton next;
    private javax.swing.JRadioButton op1;
    private javax.swing.JRadioButton op2;
    private javax.swing.JRadioButton op3;
    private javax.swing.JRadioButton op4;
    private javax.swing.JLabel paper;
    private javax.swing.JButton previous;
    private javax.swing.JLabel qnol;
    private javax.swing.JLabel tarea;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
public void loadQuestion() {
        try {
            ArrayList<QuestionPojo> questionlist = QuestionDao.getQuestionByExamId(exam.getExamid());
            for (QuestionPojo obj : questionlist) {
                qstore.addQuestion(obj);
            }
        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }

    public void showQuestion() {
        QuestionPojo question = qstore.getQuestion(pos);
        tarea.setText(question.getQuestion());
        op1.setText(question.getAnswer1());
        op2.setText(question.getAnswer2());
        op3.setText(question.getAnswer3());
        op4.setText(question.getAnswer4());

        System.out.println(astore.getAllAnswer() + " " + qno);

        AnswerPojo answer = astore.getAnswerBYQno(qno);
        System.out.println(answer + " " + qno);

        if (answer == null) {
            return;

        }

        String chosenAnswer = answer.getChosenanswer();

        switch (chosenAnswer) {
            case "Answer1":
                op1.setSelected(true);

                break;
            case "Answer2":
                op2.setSelected(true);

                break;
            case "Answer3":
                op3.setSelected(true);

                break;
            case "Answer4":
                op4.setSelected(true);

                break;
        }
    }

    public String getUserAnswer() {
        if (op1.isSelected()) {
            return "Answer1";
        } else if (op2.isSelected()) {
            return "Answer2";
        } else if (op3.isSelected()) {
            return "Answer3";
        } else if (op4.isSelected()) {
            return "Answer4";
        } else {
            return null;
        }

    }

}
